{"version":3,"sources":["index.js"],"names":["tf","threshold","predictionArrayNumber","scoresArrayNumber","_callee","model","_Users_chintan_Documents_GitHub_TFJS_object_detection_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","sent","abrupt","stop","App","props","_this","Object","_Users_chintan_Documents_GitHub_TFJS_object_detection_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","call","videoRef","React","createRef","canvasRef","detectFrame","video","startScope","executeAsync","process_input","then","prediction","boxes","dataSync","_","map","value","chunk","scores","finalResponse","score","key","box","filter","obj","console","log","setState","count","length","renderPredictions","requestAnimationFrame","_Users_chintan_Documents_GitHub_TFJS_object_detection_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","endScope","response","ctx","current","getContext","clearRect","canvas","width","height","font","textBaseline","detections","buildDetectedObjects","forEach","item","x","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","toFixed","textHeight","parseInt","fillRect","fillText","state","_this2","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","load_model","all","values","catch","error","video_frame","fromPixels","toInt","transpose","expandDims","document","getElementById","detectionObjects","bbox","minY","offsetHeight","minX","offsetWidth","maxY","maxX","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","style","position","className","autoPlay","playsInline","muted","ref","id","Component","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.c725c2c9.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport \"./styles.css\";\ntf.setBackend(\"webgl\");\n\nconst threshold = 0.4;\nvar predictionArrayNumber = 817;\nvar scoresArrayNumber = 841;\n\n// async function load_model() {\n//   const model = await loadGraphModel(\n//     \"https://raw.githubusercontent.com/souvikwohlig/image_classifier_diamond/main/assets/model.json\"\n//   );\n//   return model;\n// }\n\nasync function load_model() {\n  const model = await tf.loadGraphModel(\n    \"https://raw.githubusercontent.com/wohlig/TFJS-object-detection/master/models/diamond_detector_620/model.json\"\n  );\n  return model;\n}\n\nclass App extends React.Component {\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n  }\n  componentDidMount() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"environment\",\n            width: 320,\n            height: 320,\n          },\n        })\n        .then((stream) => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n\n      const modelPromise = load_model();\n\n      Promise.all([modelPromise, webCamPromise])\n        .then((values) => {\n          this.detectFrame(this.videoRef.current, values[0]);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  }\n\n  detectFrame = (video, model) => {\n    tf.engine().startScope();\n    model.executeAsync(this.process_input(video)).then((prediction) => {\n      var boxes = prediction[predictionArrayNumber].dataSync();\n      boxes = _.map(boxes, function(value) {\n        return value;\n      });\n      boxes = _.chunk(boxes, 4);\n\n      var scores = prediction[scoresArrayNumber].dataSync();\n\n      var finalResponse = _.map(scores, function(score, key) {\n        var retObj = {\n          score: score,\n          box: boxes[key],\n        };\n        return retObj;\n      });\n      finalResponse = _.filter(finalResponse, function(obj) {\n        return obj.score >= threshold;\n      });\n      console.log(finalResponse);\n      this.setState({ count: finalResponse.length });\n      this.renderPredictions(finalResponse, video);\n      requestAnimationFrame(() => {\n        var reactApp = this;\n        reactApp.detectFrame(video, model);\n      });\n      tf.engine().endScope();\n    });\n  };\n\n  process_input(video_frame) {\n    const tfimg = tf.browser.fromPixels(video_frame).toInt();\n    const expandedimg = tfimg.transpose([0, 1, 2]).expandDims();\n    return expandedimg;\n  }\n\n  buildDetectedObjects(response) {\n    var video_frame = document.getElementById(\"frame\");\n\n    const detectionObjects = _.map(response, function(obj) {\n      const bbox = [];\n      const minY = obj.box[0] * video_frame.offsetHeight;\n      const minX = obj.box[1] * video_frame.offsetWidth;\n      const maxY = obj.box[2] * video_frame.offsetHeight;\n      const maxX = obj.box[3] * video_frame.offsetWidth;\n      bbox[0] = minX;\n      bbox[1] = minY;\n      bbox[2] = maxX - minX;\n      bbox[3] = maxY - minY;\n      return {\n        score: obj.score,\n        bbox: bbox,\n      };\n    });\n    console.log(detectionObjects);\n    return detectionObjects;\n  }\n\n  renderPredictions = (response) => {\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Font options.\n    const font = \"16px sans-serif\";\n    ctx.font = font;\n    ctx.textBaseline = \"top\";\n\n    const detections = this.buildDetectedObjects(response);\n\n    detections.forEach((item) => {\n      const x = item[\"bbox\"][0];\n      const y = item[\"bbox\"][1];\n      const width = item[\"bbox\"][2];\n      const height = item[\"bbox\"][3];\n\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#00FFFF\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x, y, width, height);\n\n      // Draw the label background.\n      ctx.fillStyle = \"#00FFFF\";\n      const textWidth = ctx.measureText((100 * item[\"score\"]).toFixed(2) + \"%\")\n        .width;\n      const textHeight = parseInt(font, 10); // base 10\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n    });\n\n    detections.forEach((item) => {\n      const x = item[\"bbox\"][0];\n      const y = item[\"bbox\"][1];\n\n      // Draw the text last to ensure it's on top.\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText((100 * item[\"score\"]).toFixed(2) + \"%\", x, y);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Terra Cor Diamonds</h1>\n        <h3>RealTime Count</h3>\n        <h5>Count: {this.state.count} </h5>\n        <div style={{ position: \"relative\" }}>\n          <video\n            style={{ height: \"320px\", width: \"320px\" }}\n            className=\"size\"\n            autoPlay\n            playsInline\n            muted\n            ref={this.videoRef}\n            width=\"320\"\n            height=\"320\"\n            id=\"frame\"\n          />\n          <canvas\n            className=\"size\"\n            ref={this.canvasRef}\n            width=\"320\"\n            height=\"320\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}